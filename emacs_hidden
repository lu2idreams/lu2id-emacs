(tool-bar-mode -1)
(menu-bar-mode -1)
(toggle-scroll-bar -1)
(global-visual-line-mode t)
(require 'package)
(setq package-check-signature nil)
;; Add any repositories here
(add-to-list 'package-archives
	     '("MELPA" .
	       "https://melpa.org/packages/"))
(package-initialize)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#282a36" "#ff5555" "#50fa7b" "#f1fa8c" "#6272a4" "#bd93f9" "#8be9fd" "#f8f8f2"])
 '(custom-enabled-themes '(spacemacs-light))
 '(custom-safe-themes
   '("fa2b58bb98b62c3b8cf3b6f02f058ef7827a8e497125de0254f56e373abee088" "78c4238956c3000f977300c8a079a3a8a8d4d9fee2e68bad91123b58a4aa8588" "6bdcff29f32f85a2d99f48377d6bfa362768e86189656f63adbf715ac5c1340b" "4eb6fa2ee436e943b168a0cd8eab11afc0752aebb5d974bba2b2ddc8910fca8f" "18bec4c258b4b4fb261671cf59197c1c3ba2a7a47cc776915c3e8db3334a0d25" default))
 '(menu-bar-mode nil)
 '(package-selected-packages
   '(dashboard spacemacs-theme gnu-elpa-keyring-update gruvbox-theme ess monokai-theme monokai-pro-theme monokai-alt-theme molokai-theme markdown-mode dracula-theme))
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "JetBrains Mono" :foundry "JB" :slant normal :weight normal :height 113 :width normal)))))

(when window-system (set-frame-size (selected-frame) 80 35))

;; start writeroom-mode when editing markdown
(add-hook 'markdown-mode-hook 'writeroom-mode)

;; evil
(require 'evil)
(evil-mode 1)
(setq evil-respect-visual-line-mode t)
;; Make movement keys work like they should
(define-key evil-normal-state-map (kbd "<remap> <evil-next-line>") 'evil-next-visual-line)
(define-key evil-normal-state-map (kbd "<remap> <evil-previous-line>") 'evil-previous-visual-line)
(define-key evil-motion-state-map (kbd "<remap> <evil-next-line>") 'evil-next-visual-line)
(define-key evil-motion-state-map (kbd "<remap> <evil-previous-line>") 'evil-previous-visual-line)
; Make horizontal movement cross lines                                    
(setq-default evil-cross-lines t)

(require 'dashboard)
(dashboard-setup-startup-hook)
(setq dashboard-startup-banner "~/.emacs.d/jesus2.png")
(setq dashboard-items '((recents . 5)))
(setq dashboard-set-init-info t)
(setq dashboard-set-footer nil)
(setq dashboard-banner-logo-title "Welcome back to the one true editor.")

(setq inhibit-startup-screen t) ;; inhibit the default startup screen

;; Command for writing (i.e. saving) and closing current buffer only
(evil-define-command evil-write-and-kill-buffer (path)
  "Save and kill buffer."
  :repeat nil
  :move-point nil
  (interactive "<f>")
  (if (zerop (length path))
      (save-buffer)
    (write-file path))
  (kill-buffer (current-buffer)))

(evil-ex-define-cmd "wbd[elete]" 'evil-write-and-kill-buffer)
;; ...so :wbd should behave like default Emacs' C-x s C-x k
;; Think of :wbd as "Write Buffer - Delete"
